<simulation dim = "2">

	<mmsystem>
		<lammps>
			<datafile>
				atoms-lammps.data
			</datafile>

			<pair>
				<type>  lj  </type>
				<skin>  0.3 </skin>
				<rcut>  1.5 </rcut>
				<eps>   1.0 </eps>
				<sigma> 1.0 </sigma>
			</pair>
		</lammps>

		<tremolo>
			<datafile>
				atoms-tremolo.data
			</datafile>

			#include "box.xml"

			<pair>
				<type>  lj  </type>
				<rcut>  1.5 </rcut>
				<eps>   1.0 </eps>
				<sigma> 1.0 </sigma>
			</pair>

			<processors> 4 6 1 </processors>

			<extforces>
			</extforces>
		</tremolo>

		<!-- Initial conditions for the displacement -->
		<initcondsu>
			RadialWave(x,y,z, A = 0.15, sigma = 15, b = 0.1)
		</initcondsu>
		<!-- Initial conditions for the velocity -->
		<initcondsv>
			[ 0.0, 0.0, 0.0 ]
		</initcondsv>
	</mmsystem>

	<fesolver>
		<ug>
			#include "cb2.xml"

			<rho>
				0.916486424665735
			</rho>

			#include "meshfile.xml"

			<loadbal>
				<strategy> 0 </strategy>
			</loadbal>

			<vectors>
				<vector>
					<ncomps> 1 </ncomps>
					<num> 7 </num>
					<dof> node </dof>
				</vector>
				<vector>
					<ncomps> 3 </ncomps>
					<num> 7 </num>
					<dof> node </dof>
				</vector>
				<vector>
					<ncomps> 9 </ncomps>
					<num> 1 </num>
					<dof> element </dof>
				</vector>
			</vectors>
		</ug>

		<!-- Initial conditions for the displacement -->
		<initcondsu>
			[ 0.0, 0.0, 0.0 ]
		</initcondsu>
		<!-- Initial conditions for the velocity -->
		<initcondsv>
			[ 0.0, 0.0, 0.0 ]
		</initcondsv>
	</fesolver>

	<!-- The file "handshake.xml" contains the definition of the
	handshake geometry (as a collection of geometric primitives)
	and the boundary values for the weighting function (which is
	extended to the interior via interpolation -->
	#include "handshake.xml"

	<!-- Parameters for the (single-step) RATTLE integrator for the DAE -->
	<rattle>
		<!-- Number of steps to perform -->
		<nsteps> 20000 </nsteps>
		<!-- Timestep size -->
		<tau> 0.005 </tau>

		<!-- In the <damping> element, the parameters for the PML
		damping for high-frequent parts in the handshake region
		are defined -->
		<damping>
			<type> frictionff </type>
			<!-- With the <constant> element the strength of the damping
			can be controlled by multiplying a constant value to the quadratic
			damping function. Here we use the value -log(0.35)*1.5 (found
			in the literature for PML dampings) -->
			<constant> 1.57473318675 </constant>

			<filter>
				<!-- We support L2-based (l2) or Least-squares (ls) based filtering
				(these are the projections implemented in MACI) -->
				<type> l2 </type>
				<hdiam>
					1.68369307246406 1.68369307246406 1.68369307246406
				</hdiam>
			</filter>
		</damping>
	
		<!-- In this section we specify the parameters for the coupling of MD and
		FE displacement and velocity fields -->
		<corrector>
			<!-- Define the projection P used in evaluating constraints g = U - P*u = 0
			L2 and Least-Squares projection are implemented -->
			<projection>
				<type> l2 </type>
				<hdiam>
					1.68369307246406 1.68369307246406 1.68369307246406
				</hdiam>
			</projection>

			<!-- In this section we define solver for the linear system -->
			<solver>
				<!-- currently trilinos, petsc and umfpack can be
				supported depending on the configuration. Note that UMFPACK
				assumes that each connected component of the handshake region
				is located on a single processing element -->
				<type> trilinos </type>
				<maxiter> 20 </maxiter>
				<tol> 1e-5 </tol>
			</solver>
		</corrector>

		<!-- Plugins: Plugins are C++ classes implemented in MACI
		to do diagnostic, visualization or other analysis tasks which
		are performed during time integration -->
		<plugintable>
			<!-- A plugin for measuring the energy. In the <plugin>
			element, the constructor for the plugin should be specified.
			The actual arguments depend on the plugin but the first
			argument to the constructor is always "app" -->
			<plugin pes = "md">
				plugins.MeasureEnergy(app, mask = 10, outfile = "energy-md.dat")
			</plugin>
			<plugin pes = "md">
				plugins.Visualize(app, mask = 1000, prefix = "out-md")
			</plugin>
			<plugin pes = "fe">
				plugins.MeasureEnergy(app, mask = 10, outfile = "energy-fe.dat")
			</plugin>
			<plugin pes = "fe">
				plugins.Visualize(app, mask = 1000, prefix = "out-fe")
			</plugin> 
		</plugintable>
	</rattle>

	<procel>
		<split>
			<npes> T </npes>
			<md> range(0,T/2) </md>
			<fe> range(T/2,T) </fe>
		</split>

		<split>
			<npes> 32 </npes>
			<md> range(0,24) </md>
			<fe> range(24,32) </fe>
		</split>
	</procel>

</simulation>

